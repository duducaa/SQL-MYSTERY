#CRIAR BANCO DE DADOS
DROP DATABASE sql_mystery;

CREATE DATABASE SQL_MYSTERY;
USE  SQL_MYSTERY;

#TABELAS DO JOGO SQL MYSTERY

#CONVIDADOS DO CASAMENTO
CREATE TABLE TB_PERFIL (
  ID_PERFIL INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
  NOME VARCHAR(255),
  CHECK (UPPER(NOME) IN ('CONVIDADO', 'FUNCIONÁRIO'))
);

CREATE TABLE TB_ESPECIE (
	ID_ESPECIE INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(255) NOT NULL
);

CREATE TABLE TB_MAGIA (
	ID_MAGIA INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(255),
    TIPO ENUM('AR','ÁGUA','TERRA','FOGO','TREVAS','FLORESTA','LUZ', 'ALQUIMÍA', 'ESPAÇO', 'MATÉRIA', 'TEMPO')
);

CREATE TABLE TB_TITULO (
	ID_TITULO INT PRIMARY KEY AUTO_INCREMENT,
    NOME ENUM('BARÃO', 'VISCONDE', 'FAMILIA REAL', 'DUQUE', 'MARQUÊS', 'CONDE', 'BARONETE', 'CAVALEIRO')
);

#CARTÓRIO DO MUNDO ANIMAL
CREATE TABLE TB_PERSONAGEM (
  ID_PERSONAGEM INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
  NOME VARCHAR(255) NOT NULL,
  CAF INT NOT NULL UNIQUE, #CAF (COMPROVANTE DE ANIMAL FISICO)
  DATA_NASCIMENTO DATE NOT NULL,
  AFILIACAO VARCHAR(255) NOT NULL,
  ID_ESPECIE INT NOT NULL,
  ID_TITULO INT NOT NULL,
  ID_MAGIA INT NOT NULL,
  MORADIA VARCHAR(255) DEFAULT 'ANDARILHO',
  ID_PERFIL INT UNSIGNED NOT NULL,
  FOREIGN KEY (ID_PERFIL) REFERENCES TB_PERFIL(ID_PERFIL),
  FOREIGN KEY (ID_ESPECIE) REFERENCES TB_ESPECIE(ID_ESPECIE),
  FOREIGN KEY (ID_MAGIA) REFERENCES TB_MAGIA(ID_MAGIA),
  FOREIGN KEY (ID_TITULO) REFERENCES TB_TITULO(ID_TITULO)  
);

INSERT INTO TB_PERFIL VALUES 
	(1, 'CONVIDADO'),
    (2, 'FUNCIONÁRIO');

#SALAS DE EVENTOS
CREATE TABLE TB_SALA (
  ID_SALA INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
  NOME_SALA VARCHAR(255) NOT NULL,
  CAPACIDADE INT NOT NULL
);

#TABELA ITENS
CREATE TABLE TB_ITEM (
  ID_ITEM INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  NOME_ITEM VARCHAR(255) NOT NULL,
  ID_SALA INT UNSIGNED NOT NULL,
  CONSTRAINT ID_SALA_ITENS_FK FOREIGN KEY (ID_SALA) REFERENCES TB_SALA(ID_SALA)
);

#TABELA  TESTEMUNHAS
CREATE TABLE TB_TESTEMUNHA (
  ID_TESTEMUNHA INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  ID_PERSONAGEM INT UNSIGNED NOT NULL,
  DEPOIMENTO TEXT NOT NULL,
  CONSTRAINT ID_PERSONAGEM_TESTEMUNHAS_FK FOREIGN KEY (ID_PERSONAGEM) REFERENCES TB_PERSONAGEM(ID_PERSONAGEM)
);

#TABELA DE SOLUÇÃO PARA VALIDAR O SUSPEITO
CREATE TABLE TB_SOLUCAO (
  ID_SOLUCAO INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  NOME_ASSASSINO VARCHAR(255) NOT NULL UNIQUE,
  ESPECIE_ASSASSINO VARCHAR(255) NOT NULL UNIQUE
);

#SEGREDO NO QUAL VAI AJUDAR A SOLUCIONAR
CREATE TABLE TB_COFRE(
  ID_COFRE INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  SENHA INT NOT NULL,
  PISTA TEXT
);

#FICHA CRIMINAIS DO REINO
CREATE TABLE TB_FICHA_CRIMINAL(
  ID_CRIME INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  ID_PERSONAGEM INT UNSIGNED NOT NULL,
  CRIME ENUM('ASSASSINATO','ROUBO','MAGIA DAS TREVAS','ALQUIMIA PROIBIDA','ESPIONAGEM','CORRUPIÇÃO','CONTRABANDO'),
  INICIO_PENA DATE NOT NULL,
  FIM_PENA DATE NOT NULL,
  STATUS ENUM('PRESO','LIVRE') NOT NULL,
  CONSTRAINT ID_PERSONAGEM_CRIME_FK FOREIGN KEY (ID_PERSONAGEM) REFERENCES TB_PERSONAGEM(ID_PERSONAGEM)
);

#CARACTERISTICAS FISICAS DOS PERSONAGENS
CREATE TABLE TB_MORFOLOGIA(
  ID_APARENCIA INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  ID_PERSONAGEM INT UNSIGNED NOT NULL UNIQUE,
  PELO VARCHAR(255),
  OLHOS VARCHAR(255) NOT NULL,
  ALTURA FLOAT NOT NULL,
  CONSTRAINT ID_PERSONAGEM_MORFOLOGIA_FK FOREIGN KEY (ID_PERSONAGEM) REFERENCES TB_PERSONAGEM(ID_PERSONAGEM)
);

CREATE TABLE TB_DICA (
  ID_DICA INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  DICA TEXT NOT NULL
);

CREATE TABLE TB_EVENTO (
	ID_EVENTO INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(255) NOT NULL
);

#PROGRAMAÇÕES DO EVENTO
CREATE TABLE TB_PROGRAMACAO (
  ID_PROGRAMACAO INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  ID_SALA INT UNSIGNED NOT NULL, 
  ID_CONVIDADO INT UNSIGNED,
  ID_FUNCIONARIO INT UNSIGNED,
  ID_EVENTO INT UNSIGNED NOT NULL,
  NOME VARCHAR(255) NOT NULL,
  HORA TIME NOT NULL,
  CONSTRAINT ID_SALA_PROGRAMA_FK FOREIGN KEY (ID_SALA) REFERENCES TB_SALA(ID_SALA),
  FOREIGN KEY (ID_EVENTO) REFERENCES TB_EVENTO(ID_EVENTO)
);

CREATE TABLE TB_CONVITE (
	ID_CONVITE INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    ID_EVENTO INT UNSIGNED NOT NULL,
    ID_PERSONAGEM INT UNSIGNED NOT NULL,
    CONFIRMACAO BOOL,
    FOREIGN KEY (ID_EVENTO) REFERENCES TB_EVENTO(ID_EVENTO),
    FOREIGN KEY (ID_PERSONAGEM) REFERENCES TB_PERSONAGEM(ID_PERSONAGEM)
);

DELIMITER $

CREATE TRIGGER TG_CONVITE_PERSONAGEM
BEFORE INSERT
ON TB_CONVITE
FOR EACH ROW
BEGIN
	DECLARE vPerfil TEXT;
    SET vPerfil = (
		SELECT
			PL.NOME
		FROM
			TB_PERSONAGEM PM
		INNER JOIN
			TB_PERFIL PL
		ON
			PL.ID_PERFIL = PM.ID_PERFIL
		WHERE
			PM.ID_PERSONAGEM = NEW.ID_PERSONAGEM
    );
END

$ DELIMITER ;
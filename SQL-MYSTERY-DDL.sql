DROP DATABASE sql_mystery;

#CRIAR BANCO DE DADOS
CREATE DATABASE SQL_MYSTERY;
USE  SQL_MYSTERY;

#TABELAS DO JOGO SQL MYSTERY
#CARTÓRIO DO MUNDO ANIMAL
CREATE TABLE TB_REGISTRO (
  ID_REGISTRO INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
  NOME VARCHAR(255) NOT NULL,
  CAF INT NOT NULL UNIQUE, #CAF (COMPROVANTE DE ANIMAL FISICO)
  DATA_NASCIMENTO DATE NOT NULL,
  AFILIACAO VARCHAR(255) NOT NULL,
  ESPECIE VARCHAR(255) NOT NULL,
  TITULO VARCHAR(255) NOT NULL DEFAULT 'SEM TITULO',
  MAGIA VARCHAR(255) NOT NULL DEFAULT 'NÃO MAGICO',
  MORADIA VARCHAR(255) DEFAULT 'ANDARILHO'
);

#CONVIDADOS DO CASAMENTO
CREATE TABLE TB_CONVIDADOS (
  ID_CONVIDADO INT UNSIGNED NOT NULL PRIMARY KEY,
  ID_REGISTRO INT UNSIGNED NOT NULL UNIQUE,
  CONFIRMACAO ENUM('PRESENTE', 'AUSENTE') NOT NULL,
  CONSTRAINT ID_REGISTRO_CONVIDADO_FK FOREIGN KEY (ID_REGISTRO) REFERENCES TB_REGISTRO (ID_REGISTRO)
);

#ANIMAIS QUE VÃO TRABALHAR NO EVENTO
CREATE TABLE TB_FUNCIONARIOS (
  ID_FUNCIONARIO INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  ID_REGISTRO INT UNSIGNED NOT NULL UNIQUE,
  TRABALHO VARCHAR(255) NOT NULL,
  CONSTRAINT ID_REGISTROF_FUNCIONARIO_FK FOREIGN KEY (ID_REGISTRO) REFERENCES TB_REGISTRO (ID_REGISTRO)
);

#SALAS DE EVENTOS
CREATE TABLE TB_SALAS (
  ID_SALA INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
  NOME_SALA VARCHAR(255) NOT NULL,
  CAPACIDADE INT NOT NULL
);

#PROGRAMAÇÕES DO EVENTO
CREATE TABLE TB_PROGRAMACAO (
  ID_PROGRAMACAO INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  ID_SALA INT UNSIGNED NOT NULL, 
  ID_CONVIDADO INT UNSIGNED,
  ID_FUNCIONARIO INT UNSIGNED,
  EVENTO VARCHAR(255) NOT NULL UNIQUE,
  HORA TIME NOT NULL,
  CONSTRAINT ID_SALA_PROGRAMA_FK FOREIGN KEY (ID_SALA) REFERENCES TB_SALAS(ID_SALA),
  CONSTRAINT ID_CONVIDADO_PRORAMA_FK FOREIGN KEY (ID_CONVIDADO) REFERENCES TB_CONVIDADOS(ID_CONVIDADO),
  CONSTRAINT ID_FUNCIONARIO_PROGRAMA_FK FOREIGN KEY (ID_FUNCIONARIO) REFERENCES TB_FUNCIONARIOS(ID_FUNCIONARIO)
);

#TABELA ITENS
CREATE TABLE TB_ITENS (
  ID_ITEM INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  NOME_ITEM VARCHAR(255) NOT NULL,
  ID_SALA INT UNSIGNED NOT NULL,
  CONSTRAINT ID_SALA_ITENS_FK FOREIGN KEY (ID_SALA) REFERENCES TB_SALAS(ID_SALA)
);

#TABELA  TESTEMUNHAS
CREATE TABLE TB_TESTEMUNHAS (
  ID_TESTEMUNHAS INT UNSIGNED PRIMARY KEY NOT NULL,
  ID_REGISTRO INT UNSIGNED NOT NULL,
  DEPOIMENTO TEXT NOT NULL,
  CONSTRAINT ID_REGISTRO_TESTEMUNHAS_FK FOREIGN KEY (ID_REGISTRO) REFERENCES TB_REGISTRO(ID_REGISTRO)
);

#TABELA DE SOLUÇÃO PARA VALIDAR O SUSPEITO
CREATE TABLE TB_SOLUCAO (
  ID_SOLUCAO INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  NOME_ASSASSINO VARCHAR(255) NOT NULL UNIQUE,
  ESPECIE_ASSASSINO VARCHAR(255) NOT NULL UNIQUE
);

#SEGREDO NO QUAL VAI AJUDAR A SOLUCIONAR
CREATE TABLE TB_COFRE(
  ID_COFRE INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  SENHA INT NOT NULL,
  PISTA TEXT
);

#FICHA CRIMINAIS DO REINO
CREATE TABLE TB_FICHA_CRIMINAL(
  ID_CRIME INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  ID_REGISTRO INT UNSIGNED NOT NULL,
  CRIME ENUM('ASSASSINATO','ROUBO','MAGIA DAS TREVAS','ALQUIMIA PROIBIDA','ESPIONAGEM','CORRUPIÇÃO','CONTRABANDO'),
  INICIO_PENA DATE NOT NULL,
  FIM_PENA DATE NOT NULL,
  STATUS ENUM('PRESO','LIVRE') NOT NULL,
  CONSTRAINT ID_REGISTRO_CRIME_FK FOREIGN KEY (ID_REGISTRO) REFERENCES TB_REGISTRO(ID_REGISTRO)
);

#CARACTERISTICAS FISICAS DOS PERSONAGENS
CREATE TABLE TB_MORFOLOGIA(
  ID_APARENCIA INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  ID_REGISTRO INT UNSIGNED NOT NULL UNIQUE,
  PELO VARCHAR(255),
  OLHOS VARCHAR(255) NOT NULL,
  ALTURA FLOAT NOT NULL,
  CONSTRAINT ID_REGISTRO_MORFOLOGIA_FK FOREIGN KEY (ID_REGISTRO) REFERENCES TB_REGISTRO(ID_REGISTRO)
);

CREATE TABLE TB_DICAS (
  ID_DICAS INT UNSIGNED PRIMARY KEY,
  DICA TEXT NOT NULL
);